syntax = "proto3";

package cluster_manager;

// Enum для статусов контейнера
enum InstanceStatus {
  UNKNOWN = 0;   // Неизвестный статус
  CREATING = 1;  // Создается
  RUNNING = 2;   // Запущен
  STOPPED = 3;   // Остановлен
  DELETED = 4;   // Удален
  ERROR = 5;     // Ошибка
}

// Общие структуры
message ResourceMetadata {
  string id = 1;
  string name = 2;
  string created_at = 3;
  string updated_at = 4;
}

// Ответ после создания инстанса
message InstanceResponse {
  ResourceMetadata metadata = 1;
  InstanceStatus status = 2; 
  string public_ip = 3;
  string private_ip = 4;
  repeated string network_ids = 5;
  repeated string volume_ids = 6;
  string hub_link = 7;
}

// Сообщение запроса для создания инстанса
message CreateInstanceRequest {
  string name = 1;
  string image_source = 2;
  string instance_type = 3;
  int32 cpu = 4;
  int32 memory = 5;
  int32 storage = 6;
}

// Сообщение запроса для действий с инстансом
message InstanceActionRequest {
  string instance_id = 1;
}

// Ответ на действия с инстансом
message InstanceActionResponse {
  string instance_id = 1;
  InstanceStatus status = 2; 
  string message = 3;
}

// Ответ с текущим статусом инстанса
message GetInstanceStatusResponse {
  string instance_id = 1;
  InstanceStatus status = 2;
}

message LogLine {
  string line = 1;
}

// Запрос на выполнение команды
message ExecRequest {
  string instance_id = 1;
  string command     = 2;
}
// Ответная строка вывода
message ExecResponse {
  string output = 1;
}

// Ответ с одним срезом метрик
message StatsResponse {
   double cpu_percent       = 1;
   uint64 memory_usage      = 2; // байты
   uint64 memory_limit      = 3; // байты
   uint64 blk_read          = 4; // байты
   uint64 blk_write         = 5; // байты
   uint64 net_rx_bytes      = 6;
   uint64 net_tx_bytes      = 7;
}

// Запрос на бэкап контейнера
message BackupRequest {
  // UUID контейнера (instance_id)
  string instance_id = 1;
}

// Чанк бинарных данных (TAR), который будет стримиться
message BackupChunk {
  bytes chunk = 1;
}

message RestoreMetadata {
  string instance_name = 1;
  string instance_type = 2;
  string user_id       = 3;
  int32 cpu_units      = 4;
  int32 mem_mb         = 5;
  int32 storage_gb     = 6;
}

message RestoreRequest {
  oneof payload {
    RestoreMetadata metadata = 1;
    bytes          chunk    = 2;
  }
}

message RestoreResponse {
  string instance_id = 1;
  int32 status = 2;
  string message = 3;
  string hub_link = 4;
}

// Определение сервиса
service ClusterManager {
  rpc CreateInstance(CreateInstanceRequest) returns (InstanceResponse);
  rpc GetInstanceStatus(InstanceActionRequest) returns (GetInstanceStatusResponse);
  rpc StopInstance(InstanceActionRequest) returns (InstanceActionResponse);
  rpc StartInstance(InstanceActionRequest) returns (InstanceActionResponse);
  rpc DeleteInstance(InstanceActionRequest) returns (InstanceActionResponse);
  rpc StreamLogs(InstanceActionRequest) returns (stream LogLine);
  rpc ExecCommand(ExecRequest) returns (stream ExecResponse);
  rpc StreamStats(InstanceActionRequest) returns (stream StatsResponse);
  rpc BackupInstance (BackupRequest) returns (stream BackupChunk);
  rpc RestoreInstance (stream RestoreRequest) returns (RestoreResponse);
}
